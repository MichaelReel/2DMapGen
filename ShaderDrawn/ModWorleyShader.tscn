[gd_scene load_steps=58 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://ShaderDrawn/ModWorleyShader.gd" type="Script" id=2]

[sub_resource type="VisualShaderNodeCompare" id=1]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 0.001 ]
condition = 1

[sub_resource type="VisualShaderNodeVectorDistance" id=2]

[sub_resource type="VisualShaderNodeVectorCompose" id=3]

[sub_resource type="VisualShaderNodeTexture" id=4]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id=5]

[sub_resource type="VisualShaderNodeTexture" id=6]
source = 5

[sub_resource type="VisualShaderNodeVectorDistance" id=7]

[sub_resource type="VisualShaderNodeScalarUniform" id=8]
uniform_name = "PointSpace"

[sub_resource type="VisualShaderNodeVectorCompose" id=9]

[sub_resource type="VisualShaderNodeVectorCompose" id=10]

[sub_resource type="VisualShaderNodeVectorOp" id=11]

[sub_resource type="VisualShaderNodeTexture" id=12]
source = 5

[sub_resource type="VisualShaderNodeVectorDistance" id=13]

[sub_resource type="VisualShaderNodeVectorCompose" id=14]

[sub_resource type="VisualShaderNodeTextureUniform" id=15]
uniform_name = "PointData"

[sub_resource type="VisualShaderNodeVectorOp" id=16]

[sub_resource type="VisualShaderNodeTexture" id=17]
source = 5

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
function = 19

[sub_resource type="VisualShaderNodeVectorCompose" id=20]

[sub_resource type="VisualShaderNodeVectorOp" id=21]

[sub_resource type="VisualShaderNodeTexture" id=22]
source = 5

[sub_resource type="VisualShaderNodeVectorCompose" id=23]

[sub_resource type="VisualShaderNodeVectorCompose" id=24]

[sub_resource type="VisualShaderNodeVectorCompose" id=25]

[sub_resource type="VisualShaderNodeVectorCompose" id=26]

[sub_resource type="VisualShaderNodeVectorOp" id=27]

[sub_resource type="VisualShaderNodeVectorOp" id=28]

[sub_resource type="VisualShaderNodeVectorOp" id=29]

[sub_resource type="VisualShaderNodeVectorOp" id=30]

[sub_resource type="VisualShaderNodeTexture" id=31]
source = 5

[sub_resource type="VisualShaderNodeTexture" id=32]
source = 5

[sub_resource type="VisualShaderNodeTexture" id=33]
source = 5

[sub_resource type="VisualShaderNodeTexture" id=34]
source = 5

[sub_resource type="VisualShaderNodeVectorDistance" id=35]

[sub_resource type="VisualShaderNodeVectorDistance" id=36]

[sub_resource type="VisualShaderNodeVectorDistance" id=37]

[sub_resource type="VisualShaderNodeVectorDistance" id=38]

[sub_resource type="VisualShaderNodeVectorDistance" id=39]

[sub_resource type="VisualShaderNodeVectorDistance" id=40]

[sub_resource type="VisualShaderNodeScalarOp" id=41]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=42]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=43]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=44]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=45]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=46]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=47]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=48]
operator = 7

[sub_resource type="VisualShaderNodeScalarOp" id=49]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=50]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=51]
input_name = "uv"

[sub_resource type="VisualShaderNodeSwitch" id=52]

[sub_resource type="VisualShaderNodeTextureUniform" id=53]
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=54]
code = "shader_type canvas_item;
uniform sampler2D TextureUniform;
uniform sampler2D PointData;
uniform float PointSpace;



void vertex() {
// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out3p0;
	COLOR.a = n_out3p1;

}

void fragment() {
// Input:32
	vec3 n_out32p0 = vec3(UV, 0.0);

// Input:7
	vec3 n_out7p0 = vec3(UV, 0.0);

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(PointData, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// Texture:15
	vec3 n_out15p0;
	float n_out15p1;
	{
		vec4 PointData_tex_read = texture(PointData, n_out7p0.xy);
		n_out15p0 = PointData_tex_read.rgb;
		n_out15p1 = PointData_tex_read.a;
	}

// Distance:13
	float n_out13p0 = distance(n_out32p0, n_out15p0);

// Compare:10
	float n_in10p0 = 0.00000;
	float n_in10p2 = 0.00100;
	bool n_out10p0 = (abs(n_in10p0 - n_out13p0) < n_in10p2);
// ScalarUniform:23
	float n_out23p0 = PointSpace;

// ScalarOp:65
	float n_in65p0 = 1.00000;
	float n_out65p0 = n_in65p0 / n_out23p0;

// VectorCompose:24
	float n_in24p1 = 0.00000;
	float n_in24p2 = 0.00000;
	vec3 n_out24p0 = vec3(n_out23p0, n_in24p1, n_in24p2);

// VectorOp:17
	vec3 n_out17p0 = n_out7p0 + n_out24p0;

// Texture:18
	vec3 n_out18p0;
	float n_out18p1;
	{
		vec4 PointData_tex_read = texture(PointData, n_out17p0.xy);
		n_out18p0 = PointData_tex_read.rgb;
		n_out18p1 = PointData_tex_read.a;
	}

// Distance:19
	float n_out19p0 = distance(n_out32p0, n_out18p0);

// VectorCompose:25
	float n_in25p0 = 0.00000;
	float n_in25p2 = 0.00000;
	vec3 n_out25p0 = vec3(n_in25p0, n_out23p0, n_in25p2);

// VectorOp:26
	vec3 n_out26p0 = n_out7p0 + n_out25p0;

// Texture:27
	vec3 n_out27p0;
	float n_out27p1;
	{
		vec4 PointData_tex_read = texture(PointData, n_out26p0.xy);
		n_out27p0 = PointData_tex_read.rgb;
		n_out27p1 = PointData_tex_read.a;
	}

// Distance:28
	float n_out28p0 = distance(n_out32p0, n_out27p0);

// ScalarOp:56
	float n_out56p0 = min(n_out19p0, n_out28p0);

// VectorCompose:37
	float n_in37p2 = 0.00000;
	vec3 n_out37p0 = vec3(n_out23p0, n_out23p0, n_in37p2);

// VectorOp:41
	vec3 n_out41p0 = n_out7p0 + n_out37p0;

// Texture:45
	vec3 n_out45p0;
	float n_out45p1;
	{
		vec4 PointData_tex_read = texture(PointData, n_out41p0.xy);
		n_out45p0 = PointData_tex_read.rgb;
		n_out45p1 = PointData_tex_read.a;
	}

// Distance:49
	float n_out49p0 = distance(n_out32p0, n_out45p0);

// ScalarFunc:33
	float n_out33p0 = -(n_out23p0);

// VectorCompose:38
	float n_in38p2 = 0.00000;
	vec3 n_out38p0 = vec3(n_out23p0, n_out33p0, n_in38p2);

// VectorOp:42
	vec3 n_out42p0 = n_out7p0 + n_out38p0;

// Texture:46
	vec3 n_out46p0;
	float n_out46p1;
	{
		vec4 PointData_tex_read = texture(PointData, n_out42p0.xy);
		n_out46p0 = PointData_tex_read.rgb;
		n_out46p1 = PointData_tex_read.a;
	}

// Distance:50
	float n_out50p0 = distance(n_out32p0, n_out46p0);

// ScalarOp:57
	float n_out57p0 = min(n_out49p0, n_out50p0);

// ScalarOp:60
	float n_out60p0 = min(n_out56p0, n_out57p0);

// VectorCompose:39
	float n_in39p2 = 0.00000;
	vec3 n_out39p0 = vec3(n_out33p0, n_out23p0, n_in39p2);

// VectorOp:43
	vec3 n_out43p0 = n_out7p0 + n_out39p0;

// Texture:47
	vec3 n_out47p0;
	float n_out47p1;
	{
		vec4 PointData_tex_read = texture(PointData, n_out43p0.xy);
		n_out47p0 = PointData_tex_read.rgb;
		n_out47p1 = PointData_tex_read.a;
	}

// Distance:51
	float n_out51p0 = distance(n_out32p0, n_out47p0);

// VectorCompose:40
	float n_in40p2 = 0.00000;
	vec3 n_out40p0 = vec3(n_out33p0, n_out33p0, n_in40p2);

// VectorOp:44
	vec3 n_out44p0 = n_out7p0 + n_out40p0;

// Texture:48
	vec3 n_out48p0;
	float n_out48p1;
	{
		vec4 PointData_tex_read = texture(PointData, n_out44p0.xy);
		n_out48p0 = PointData_tex_read.rgb;
		n_out48p1 = PointData_tex_read.a;
	}

// Distance:52
	float n_out52p0 = distance(n_out32p0, n_out48p0);

// ScalarOp:59
	float n_out59p0 = min(n_out51p0, n_out52p0);

// VectorCompose:29
	float n_in29p1 = 0.00000;
	float n_in29p2 = 0.00000;
	vec3 n_out29p0 = vec3(n_out33p0, n_in29p1, n_in29p2);

// VectorOp:30
	vec3 n_out30p0 = n_out7p0 + n_out29p0;

// Texture:31
	vec3 n_out31p0;
	float n_out31p1;
	{
		vec4 PointData_tex_read = texture(PointData, n_out30p0.xy);
		n_out31p0 = PointData_tex_read.rgb;
		n_out31p1 = PointData_tex_read.a;
	}

// Distance:53
	float n_out53p0 = distance(n_out32p0, n_out31p0);

// VectorCompose:34
	float n_in34p0 = 0.00000;
	float n_in34p2 = 0.00000;
	vec3 n_out34p0 = vec3(n_in34p0, n_out33p0, n_in34p2);

// VectorOp:35
	vec3 n_out35p0 = n_out7p0 + n_out34p0;

// Texture:36
	vec3 n_out36p0;
	float n_out36p1;
	{
		vec4 PointData_tex_read = texture(PointData, n_out35p0.xy);
		n_out36p0 = PointData_tex_read.rgb;
		n_out36p1 = PointData_tex_read.a;
	}

// Distance:54
	float n_out54p0 = distance(n_out32p0, n_out36p0);

// ScalarOp:58
	float n_out58p0 = min(n_out53p0, n_out54p0);

// ScalarOp:61
	float n_out61p0 = min(n_out59p0, n_out58p0);

// ScalarOp:62
	float n_out62p0 = min(n_out60p0, n_out61p0);

// ScalarOp:63
	float n_out63p0 = min(n_out13p0, n_out62p0);

// ScalarOp:64
	float n_out64p0 = n_out65p0 * n_out63p0;

// VectorCompose:14
	vec3 n_out14p0 = vec3(n_out64p0, n_out64p0, n_out64p0);

// VectorSwitch:9
	vec3 n_in9p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out9p0;
	if(n_out10p0)
	{
		n_out9p0 = n_in9p1;
	}
	else
	{
		n_out9p0 = n_out14p0;
	}

// Output:0
	COLOR.rgb = n_out9p0;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -357.614, 215.75 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 440, 220 )
nodes/vertex/3/node = SubResource( 53 )
nodes/vertex/3/position = Vector2( -260, 220 )
nodes/vertex/connections = PoolIntArray( 3, 1, 0, 3, 3, 0, 0, 2 )
nodes/fragment/0/position = Vector2( 2160, 540 )
nodes/fragment/3/node = SubResource( 15 )
nodes/fragment/3/position = Vector2( -60, 340 )
nodes/fragment/7/node = SubResource( 51 )
nodes/fragment/7/position = Vector2( -340, 540 )
nodes/fragment/9/node = SubResource( 52 )
nodes/fragment/9/position = Vector2( 1940, 540 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 1040, 360 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( 500, 520 )
nodes/fragment/14/node = SubResource( 3 )
nodes/fragment/14/position = Vector2( 1700, 600 )
nodes/fragment/15/node = SubResource( 4 )
nodes/fragment/15/position = Vector2( 240, 520 )
nodes/fragment/17/node = SubResource( 5 )
nodes/fragment/17/position = Vector2( -40, 660 )
nodes/fragment/18/node = SubResource( 6 )
nodes/fragment/18/position = Vector2( 240, 660 )
nodes/fragment/19/node = SubResource( 7 )
nodes/fragment/19/position = Vector2( 500, 660 )
nodes/fragment/23/node = SubResource( 8 )
nodes/fragment/23/position = Vector2( -1120, 900 )
nodes/fragment/24/node = SubResource( 9 )
nodes/fragment/24/position = Vector2( -380, 660 )
nodes/fragment/25/node = SubResource( 10 )
nodes/fragment/25/position = Vector2( -380, 800 )
nodes/fragment/26/node = SubResource( 11 )
nodes/fragment/26/position = Vector2( -40, 800 )
nodes/fragment/27/node = SubResource( 12 )
nodes/fragment/27/position = Vector2( 240, 800 )
nodes/fragment/28/node = SubResource( 13 )
nodes/fragment/28/position = Vector2( 500, 800 )
nodes/fragment/29/node = SubResource( 14 )
nodes/fragment/29/position = Vector2( -380, 1500 )
nodes/fragment/30/node = SubResource( 16 )
nodes/fragment/30/position = Vector2( -40, 1500 )
nodes/fragment/31/node = SubResource( 17 )
nodes/fragment/31/position = Vector2( 240, 1500 )
nodes/fragment/32/node = SubResource( 18 )
nodes/fragment/32/position = Vector2( 260, 400 )
nodes/fragment/33/node = SubResource( 19 )
nodes/fragment/33/position = Vector2( -780, 1460 )
nodes/fragment/34/node = SubResource( 20 )
nodes/fragment/34/position = Vector2( -380, 1640 )
nodes/fragment/35/node = SubResource( 21 )
nodes/fragment/35/position = Vector2( -40, 1640 )
nodes/fragment/36/node = SubResource( 22 )
nodes/fragment/36/position = Vector2( 240, 1640 )
nodes/fragment/37/node = SubResource( 23 )
nodes/fragment/37/position = Vector2( -380, 940 )
nodes/fragment/38/node = SubResource( 24 )
nodes/fragment/38/position = Vector2( -380, 1080 )
nodes/fragment/39/node = SubResource( 25 )
nodes/fragment/39/position = Vector2( -380, 1220 )
nodes/fragment/40/node = SubResource( 26 )
nodes/fragment/40/position = Vector2( -380, 1360 )
nodes/fragment/41/node = SubResource( 27 )
nodes/fragment/41/position = Vector2( -40, 940 )
nodes/fragment/42/node = SubResource( 28 )
nodes/fragment/42/position = Vector2( -40, 1080 )
nodes/fragment/43/node = SubResource( 29 )
nodes/fragment/43/position = Vector2( -40, 1220 )
nodes/fragment/44/node = SubResource( 30 )
nodes/fragment/44/position = Vector2( -40, 1360 )
nodes/fragment/45/node = SubResource( 31 )
nodes/fragment/45/position = Vector2( 240, 940 )
nodes/fragment/46/node = SubResource( 32 )
nodes/fragment/46/position = Vector2( 240, 1080 )
nodes/fragment/47/node = SubResource( 33 )
nodes/fragment/47/position = Vector2( 240, 1220 )
nodes/fragment/48/node = SubResource( 34 )
nodes/fragment/48/position = Vector2( 240, 1360 )
nodes/fragment/49/node = SubResource( 35 )
nodes/fragment/49/position = Vector2( 500, 940 )
nodes/fragment/50/node = SubResource( 36 )
nodes/fragment/50/position = Vector2( 500, 1080 )
nodes/fragment/51/node = SubResource( 37 )
nodes/fragment/51/position = Vector2( 500, 1220 )
nodes/fragment/52/node = SubResource( 38 )
nodes/fragment/52/position = Vector2( 500, 1360 )
nodes/fragment/53/node = SubResource( 39 )
nodes/fragment/53/position = Vector2( 500, 1500 )
nodes/fragment/54/node = SubResource( 40 )
nodes/fragment/54/position = Vector2( 500, 1640 )
nodes/fragment/56/node = SubResource( 41 )
nodes/fragment/56/position = Vector2( 680, 660 )
nodes/fragment/57/node = SubResource( 42 )
nodes/fragment/57/position = Vector2( 680, 940 )
nodes/fragment/58/node = SubResource( 43 )
nodes/fragment/58/position = Vector2( 680, 1500 )
nodes/fragment/59/node = SubResource( 44 )
nodes/fragment/59/position = Vector2( 680, 1220 )
nodes/fragment/60/node = SubResource( 45 )
nodes/fragment/60/position = Vector2( 880, 660 )
nodes/fragment/61/node = SubResource( 46 )
nodes/fragment/61/position = Vector2( 880, 1220 )
nodes/fragment/62/node = SubResource( 47 )
nodes/fragment/62/position = Vector2( 1080, 660 )
nodes/fragment/63/node = SubResource( 48 )
nodes/fragment/63/position = Vector2( 1280, 580 )
nodes/fragment/64/node = SubResource( 49 )
nodes/fragment/64/position = Vector2( 1420, 260 )
nodes/fragment/65/node = SubResource( 50 )
nodes/fragment/65/position = Vector2( -420, 260 )
nodes/fragment/connections = PoolIntArray( 10, 0, 9, 0, 9, 0, 0, 0, 13, 0, 10, 1, 3, 2, 15, 2, 15, 0, 13, 1, 7, 0, 17, 0, 3, 2, 18, 2, 17, 0, 18, 0, 18, 0, 19, 1, 23, 0, 24, 0, 24, 0, 17, 1, 23, 0, 25, 1, 25, 0, 26, 1, 7, 0, 26, 0, 3, 2, 27, 2, 26, 0, 27, 0, 14, 0, 9, 2, 27, 0, 28, 1, 7, 0, 30, 0, 29, 0, 30, 1, 30, 0, 31, 0, 3, 2, 31, 2, 32, 0, 19, 0, 32, 0, 28, 0, 32, 0, 13, 0, 7, 0, 15, 0, 23, 0, 33, 0, 33, 0, 29, 0, 33, 0, 34, 1, 7, 0, 35, 0, 34, 0, 35, 1, 3, 2, 36, 2, 35, 0, 36, 0, 23, 0, 37, 0, 23, 0, 37, 1, 33, 0, 40, 0, 33, 0, 40, 1, 33, 0, 38, 1, 33, 0, 39, 0, 23, 0, 38, 0, 23, 0, 39, 1, 7, 0, 41, 0, 7, 0, 42, 0, 7, 0, 43, 0, 7, 0, 44, 0, 37, 0, 41, 1, 38, 0, 42, 1, 39, 0, 43, 1, 40, 0, 44, 1, 3, 2, 45, 2, 3, 2, 46, 2, 3, 2, 47, 2, 3, 2, 48, 2, 41, 0, 45, 0, 42, 0, 46, 0, 43, 0, 47, 0, 44, 0, 48, 0, 32, 0, 49, 0, 32, 0, 50, 0, 32, 0, 51, 0, 32, 0, 52, 0, 32, 0, 53, 0, 32, 0, 54, 0, 45, 0, 49, 1, 46, 0, 50, 1, 47, 0, 51, 1, 48, 0, 52, 1, 31, 0, 53, 1, 36, 0, 54, 1, 54, 0, 58, 1, 53, 0, 58, 0, 52, 0, 59, 1, 51, 0, 59, 0, 49, 0, 57, 0, 50, 0, 57, 1, 28, 0, 56, 1, 19, 0, 56, 0, 56, 0, 60, 0, 57, 0, 60, 1, 59, 0, 61, 0, 58, 0, 61, 1, 61, 0, 62, 1, 60, 0, 62, 0, 13, 0, 63, 0, 62, 0, 63, 1, 64, 0, 14, 2, 23, 0, 65, 1, 63, 0, 64, 1, 65, 0, 64, 0, 64, 0, 14, 1, 64, 0, 14, 0 )

[sub_resource type="ShaderMaterial" id=55]
shader = SubResource( 54 )
shader_param/PointSpace = null

[node name="ModWorleyShader" type="TextureRect"]
material = SubResource( 55 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 1 )
stretch_mode = 1
script = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}
